@using Abp.Localization
@using ClothesBox.Web.Views
@using ClothesBox.Web.Areas.Admin.Views
@using ClothesBox.Web.Areas.Admin.Views.Shared.Components.SideBarMenu
@using Abp.Application.Navigation
@model Abp.Application.Navigation.UserMenuItem
@inject ILanguageManager LanguageManager
@{
    var isActive = IsActiveMenuItem(Model, ViewBag.CurrentPageName);
    var subMenus = Model.Items.Where(x => x.IsVisible).OrderByCustom().ToList();
    var hasSubMenus = subMenus.Any();
}
@functions {
    static bool IsActiveMenuItem(UserMenuItem menuItem, string pageName)
    {
        if (string.IsNullOrWhiteSpace(pageName))
            return false;

        return pageName.Equals(menuItem.Name, StringComparison.InvariantCultureIgnoreCase)
            || menuItem.Items.Any(cn => IsActiveMenuItem(cn, pageName));
    }

    string CalculateMenuUrl(string url)
    {
        if (string.IsNullOrEmpty(url))
            return ApplicationPath;

        if (UrlChecker.IsRooted(url))
            return url;

        return ApplicationPath + url;
    }
}

<!--begin::Aside menu-->
<div class="aside-menu flex-column-fluid">
    <!--begin::Menu-->
    <div class="menu menu-column menu-title-gray-800 menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary menu-arrow-gray-500" id="#kt_aside_menu" data-kt-menu="true" data-kt-menu-expand="false">
        <div data-kt-menu-trigger="click" class="menu-item menu-accordion">
            @if (hasSubMenus)
            {
                <span class="menu-link">
                    @if (!string.IsNullOrEmpty(Model.Icon))
                        {
                            <text>
                                <i class="nav-icon @Url.Content(Model.Icon)"></i>
                            </text>
                        }
                    <span style="margin-left: 10px" class="menu-title">@Model.DisplayName</span>
                    <span class="menu-arrow"></span>
                </span>
            }
            else
            {
                var linkUrl = CalculateMenuUrl(Model.Url);
                var linkClasses = $"nav-link {(isActive ? "active" : null)}";
                var linkTarget = !string.IsNullOrEmpty(Model.Target) ? Html.Raw($" target=\"{Model.Target}\"") : null;

                <a href="@linkUrl">
                    <span class="menu-link">
                        @if (!string.IsNullOrEmpty(Model.Icon))
                        {
                            <text>
                                <i class="nav-icon @Url.Content(Model.Icon)"></i>
                            </text>
                        }
                        <span style="margin-left: 10px" class="menu-title">@Model.DisplayName</span>
                    </span>
                </a>
            }

            <div class="menu-sub menu-sub-accordion menu-active-bg">
                @foreach (var subMenuItem in Model.Items)
                {
                    <div data-kt-menu-trigger="click" class="menu-item menu-accordion">
                        <span class="menu-link">
                            <span class="menu-bullet">
                                <span class="bullet bullet-dot"></span>
                            </span>
                            <span class="menu-title">@subMenuItem.DisplayName</span>
                            <span class="menu-arrow"></span>
                        </span>
                        <div class="menu-sub menu-sub-accordion menu-active-bg">
                            @foreach (var subSubMenuItem in subMenuItem.Items)
                            {
                                <div class="menu-item">
                                    <a class="menu-link" href="@subSubMenuItem.Url">
                                        <span class="menu-bullet">
                                            <span class="bullet bullet-dot"></span>
                                        </span>
                                        <span class="menu-title">@subSubMenuItem.DisplayName</span>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>